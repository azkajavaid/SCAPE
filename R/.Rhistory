gene.weights = list_weights_positive,
gene.set.collection = list_genes_positive)
genes.pattern.negative <- paste(cytokine.list, "-GenesNegative", sep="")
list_genes_negative <- do.call("list", mget(genes.pattern.negative))
names(list_genes_negative) <- genes.pattern.negative
weights.pattern.negative <- paste(cytokine.list, "-WeightsNegative", sep="")
list_weights_negative <- do.call("list", mget(weights.pattern.negative))
names(list_weights_negative) <- weights.pattern.negative
vam.out.negative <- vamForSeurat(seurat.data = seurat.object,
gene.weights = list_weights_negative,
gene.set.collection = list_genes_negative)
scape.out <- (vam.out.positive@assays$VAMcdf@data + (1-vam.out.negative@assays$VAMcdf@data))/2
vam.out.positive[['VAMcdf']] <- NULL
scape.assay <- CreateAssayObject(scape.out)
vam.out.positive[['scape']] <- scape.assay
rownames(vam.out.positive@assays$scape@data) <- cytokine.list
# genes.pattern <- paste(cytokine.list, "-Genes", sep="")
# genes.pattern.list <- do.call("list", mget(genes.pattern))
# list_genes <- genes.pattern.list
# names(list_genes) <- genes.pattern
# weights.pattern <- paste(cytokine.list, "-Weights", sep="")
# weights.pattern.list <- do.call("list", mget(weights.pattern))
# list_weights <- weights.pattern.list
# names(list_weights) <- weights.pattern
# vam.out <- vamForSeurat(seurat.data = seurat.object,
#                     gene.weights = list_weights,
#                     gene.set.collection = list_genes)
# rownames(vam.out@assays$VAMcdf@data) <- gsub("-Genes", "",
#                                              rownames(vam.out@assays$VAMcdf@data))
return(vam.out.positive)
}
else {
if (cytokine == "all") {
cytokine.list <- supportedCytokines(database = "reactome")
} else {
cytokine.list <- cytokine
}
total.output <- mat.reactome.cytokine
for (i in 1:length(total.output)) {
label.genes <- paste(unique(total.output[[i]]$cytokineLabel), "Genes", sep = "-")
out.data <- total.output[[i]]
out.data.genes <- out.data[out.data$gene %in% rownames(seurat.object),]
out.data.indices <- which(rownames(seurat.object) %in% out.data.genes$gene)
label.genes <- paste(unique(total.output[[i]]$cytokineLabel), "Genes", sep = "-")
assign(label.genes, out.data.indices)
}
genes.pattern <- paste(cytokine.list, "-Genes", sep="")
genes.pattern.list <- do.call("list", mget(genes.pattern))
list_genes <- genes.pattern.list
names(list_genes) <- genes.pattern
list_genes2 <- list_genes[lengths(list_genes) >  0]
vam.out <- vamForSeurat(seurat.data = seurat.object,
gene.set.collection = list_genes2)
rownames(vam.out@assays$VAMcdf@data) <- gsub("-Genes", "",
rownames(vam.out@assays$VAMcdf@data))
return(vam.out)
}
}
library(SeuratObject)
CytoSig.score.output.all <- scapeForSeurat(seurat.object = pbmc_small,
database = "cytosig", cytokine = "all")
(as.data.frame(CytoSig.score.output.all@assays$VAMcdf@data))[1:6,1:3]
CytoSig.score.output.specific <- scapeForSeurat(seurat.object = pbmc_small,
(as.data.frame(CytoSig.score.output.all@assays$scape@data))[1:6,1:3]
(as.data.frame(CytoSig.score.output.all@assays$scape@data))[1:6,1:3]
CytoSig.score.output.specific <- scapeForSeurat(seurat.object = pbmc_small,
database = "cytosig", cytokine = c("IL4", "IL13"))
(as.data.frame(CytoSig.score.output.specific@assays$VAMcdf@data))[,1:3]
(as.data.frame(CytoSig.score.output.specific@assays$scape@data))[,1:3]
setwd("~/Documents/SCAPE/scaper-package/scaper")
devtools::load_all()
rm(list = c("scape", "scapeForSeurat"))
devtools::load_all()
devtools::build_vignettes()
library(scaper)
library(Seurat)
library(SeuratObject)
library(pheatmap)
devtools::load_all()
devtools::build_vignettes()
library(scaper)
library(Seurat)
library(SeuratObject)
library(pheatmap)
supportedCytokines(database = "cytosig")
genesetCytoSig(cytokine.eval = "IL6",
file.name = system.file("extdata", "IL6_output.csv",
package = "scaper")) %>% head(10)
CytoSig.score.output <- scapeForSeurat(seurat.object = pbmc_small,
database = "cytosig")
library(scaper)
library(Seurat)
library(SeuratObject)
library(pheatmap)
CytoSig.score.output <- scapeForSeurat(seurat.object = pbmc_small,
database = "cytosig", cytokine = "all")
seurat.object = pbmc_small
database = "cytosig"
cytokine = "all"
seurat.object <- NormalizeData(seurat.object)
if (database == "cytosig") {
if (length(cytokine) == 1 && cytokine == "all") {
cytokine.list <- supportedCytokines(database = "cytosig")
} else {
cytokine.list <- cytokine
}
total.output <- mat.cytosig.cytokine.weights
for (i in 1:length(total.output)) {
label.genes <- paste(unique(total.output[[i]]$cytokineLabel), "Genes", sep = "-")
out.data <- total.output[[i]]
positive.weighted.data <- out.data %>% dplyr::filter(weight > 0) %>% dplyr::arrange(desc(weight))
positive.weighted.genes <- positive.weighted.data[positive.weighted.data$gene %in% colnames(counts.matrix),]
positive.weighted.indices <- which(colnames(counts.matrix) %in% positive.weighted.genes$gene)
label.genes.positive <- paste(unique(total.output[[i]]$cytokineLabel), "GenesPositive", sep = "-")
assign(label.genes.positive, positive.weighted.indices)
label.weights.positive <- paste(unique(total.output[[i]]$cytokineLabel), "WeightsPositive", sep = "-")
assign(label.weights.positive, positive.weighted.genes$weight)
negative.weighted.data <- out.data %>% dplyr::filter(weight < 0) %>% dplyr::arrange(desc(weight))
negative.weighted.genes <- negative.weighted.data[negative.weighted.data$gene %in% colnames(counts.matrix),]
negative.weighted.indices <- which(colnames(counts.matrix) %in% negative.weighted.genes$gene)
label.genes.negative <- paste(unique(total.output[[i]]$cytokineLabel), "GenesNegative", sep = "-")
assign(label.genes.negative, negative.weighted.indices)
label.weights.negative <- paste(unique(total.output[[i]]$cytokineLabel), "WeightsNegative", sep = "-")
assign(label.weights.negative, abs(negative.weighted.genes$weight))
}
genes.pattern.positive <- paste(cytokine.list, "-GenesPositive", sep="")
list_genes_positive <- do.call("list", mget(genes.pattern.positive))
names(list_genes_positive) <- genes.pattern.positive
weights.pattern.positive <- paste(cytokine.list, "-WeightsPositive", sep="")
list_weights_positive <- do.call("list", mget(weights.pattern.positive))
names(list_weights_positive) <- weights.pattern.positive
vam.out.positive <- vamForSeurat(seurat.data = seurat.object,
gene.weights = list_weights_positive,
gene.set.collection = list_genes_positive)
genes.pattern.negative <- paste(cytokine.list, "-GenesNegative", sep="")
list_genes_negative <- do.call("list", mget(genes.pattern.negative))
names(list_genes_negative) <- genes.pattern.negative
weights.pattern.negative <- paste(cytokine.list, "-WeightsNegative", sep="")
list_weights_negative <- do.call("list", mget(weights.pattern.negative))
names(list_weights_negative) <- weights.pattern.negative
vam.out.negative <- vamForSeurat(seurat.data = seurat.object,
gene.weights = list_weights_negative,
gene.set.collection = list_genes_negative)
scape.out <- (vam.out.positive@assays$VAMcdf@data + (1-vam.out.negative@assays$VAMcdf@data))/2
vam.out.positive[['VAMcdf']] <- NULL
scape.assay <- CreateAssayObject(scape.out)
vam.out.positive[['scape']] <- scape.assay
rownames(vam.out.positive@assays$scape@data) <- cytokine.list
# genes.pattern <- paste(cytokine.list, "-Genes", sep="")
# genes.pattern.list <- do.call("list", mget(genes.pattern))
# list_genes <- genes.pattern.list
# names(list_genes) <- genes.pattern
# weights.pattern <- paste(cytokine.list, "-Weights", sep="")
# weights.pattern.list <- do.call("list", mget(weights.pattern))
# list_weights <- weights.pattern.list
# names(list_weights) <- weights.pattern
# vam.out <- vamForSeurat(seurat.data = seurat.object,
#                     gene.weights = list_weights,
#                     gene.set.collection = list_genes)
# rownames(vam.out@assays$VAMcdf@data) <- gsub("-Genes", "",
#                                              rownames(vam.out@assays$VAMcdf@data))
return(vam.out.positive)
}
CytoSig.score.output <- scapeForSeurat(seurat.object = pbmc_small,
database = "cytosig", cytokine = "all")
scapeForSeurat(seurat.object = pbmc_small,
database = "cytosig", cytokine = "all")
library(scaper)
library(Seurat)
library(SeuratObject)
library(pheatmap)
pbmc_seurat
pbmc_small
seurat.object = pbmc_small
scapeForSeurat <- function(seurat.object, database="cytosig", cytokine="all") {
if (missing(seurat.object)) {
stop("scRNA-seq Seurat matrix is missing.")
}
if (missing(database)) {
stop("Specify database for gene set scoring.")
}
seurat.object <- NormalizeData(seurat.object)
if (database == "cytosig") {
if (length(cytokine) == 1 && cytokine == "all") {
cytokine.list <- supportedCytokines(database = "cytosig")
} else {
cytokine.list <- cytokine
}
total.output <- mat.cytosig.cytokine.weights
for (i in 1:length(total.output)) {
label.genes <- paste(unique(total.output[[i]]$cytokineLabel), "Genes", sep = "-")
out.data <- total.output[[i]]
positive.weighted.data <- out.data %>% dplyr::filter(weight > 0) %>% dplyr::arrange(desc(weight))
positive.weighted.genes <- positive.weighted.data[positive.weighted.data$gene %in% colnames(counts.matrix),]
positive.weighted.indices <- which(colnames(counts.matrix) %in% positive.weighted.genes$gene)
label.genes.positive <- paste(unique(total.output[[i]]$cytokineLabel), "GenesPositive", sep = "-")
assign(label.genes.positive, positive.weighted.indices)
label.weights.positive <- paste(unique(total.output[[i]]$cytokineLabel), "WeightsPositive", sep = "-")
assign(label.weights.positive, positive.weighted.genes$weight)
negative.weighted.data <- out.data %>% dplyr::filter(weight < 0) %>% dplyr::arrange(desc(weight))
negative.weighted.genes <- negative.weighted.data[negative.weighted.data$gene %in% colnames(counts.matrix),]
negative.weighted.indices <- which(colnames(counts.matrix) %in% negative.weighted.genes$gene)
label.genes.negative <- paste(unique(total.output[[i]]$cytokineLabel), "GenesNegative", sep = "-")
assign(label.genes.negative, negative.weighted.indices)
label.weights.negative <- paste(unique(total.output[[i]]$cytokineLabel), "WeightsNegative", sep = "-")
assign(label.weights.negative, abs(negative.weighted.genes$weight))
}
genes.pattern.positive <- paste(cytokine.list, "-GenesPositive", sep="")
list_genes_positive <- do.call("list", mget(genes.pattern.positive))
names(list_genes_positive) <- genes.pattern.positive
weights.pattern.positive <- paste(cytokine.list, "-WeightsPositive", sep="")
list_weights_positive <- do.call("list", mget(weights.pattern.positive))
names(list_weights_positive) <- weights.pattern.positive
vam.out.positive <- vamForSeurat(seurat.data = seurat.object,
gene.weights = list_weights_positive,
gene.set.collection = list_genes_positive)
genes.pattern.negative <- paste(cytokine.list, "-GenesNegative", sep="")
list_genes_negative <- do.call("list", mget(genes.pattern.negative))
names(list_genes_negative) <- genes.pattern.negative
weights.pattern.negative <- paste(cytokine.list, "-WeightsNegative", sep="")
list_weights_negative <- do.call("list", mget(weights.pattern.negative))
names(list_weights_negative) <- weights.pattern.negative
vam.out.negative <- vamForSeurat(seurat.data = seurat.object,
gene.weights = list_weights_negative,
gene.set.collection = list_genes_negative)
scape.out <- (vam.out.positive@assays$VAMcdf@data + (1-vam.out.negative@assays$VAMcdf@data))/2
vam.out.positive[['VAMcdf']] <- NULL
scape.assay <- CreateAssayObject(scape.out)
vam.out.positive[['scape']] <- scape.assay
rownames(vam.out.positive@assays$scape@data) <- cytokine.list
# genes.pattern <- paste(cytokine.list, "-Genes", sep="")
# genes.pattern.list <- do.call("list", mget(genes.pattern))
# list_genes <- genes.pattern.list
# names(list_genes) <- genes.pattern
# weights.pattern <- paste(cytokine.list, "-Weights", sep="")
# weights.pattern.list <- do.call("list", mget(weights.pattern))
# list_weights <- weights.pattern.list
# names(list_weights) <- weights.pattern
# vam.out <- vamForSeurat(seurat.data = seurat.object,
#                     gene.weights = list_weights,
#                     gene.set.collection = list_genes)
# rownames(vam.out@assays$VAMcdf@data) <- gsub("-Genes", "",
#                                              rownames(vam.out@assays$VAMcdf@data))
return(vam.out.positive)
}
else {
if (cytokine == "all") {
cytokine.list <- supportedCytokines(database = "reactome")
} else {
cytokine.list <- cytokine
}
total.output <- mat.reactome.cytokine
for (i in 1:length(total.output)) {
label.genes <- paste(unique(total.output[[i]]$cytokineLabel), "Genes", sep = "-")
out.data <- total.output[[i]]
out.data.genes <- out.data[out.data$gene %in% rownames(seurat.object),]
out.data.indices <- which(rownames(seurat.object) %in% out.data.genes$gene)
label.genes <- paste(unique(total.output[[i]]$cytokineLabel), "Genes", sep = "-")
assign(label.genes, out.data.indices)
}
genes.pattern <- paste(cytokine.list, "-Genes", sep="")
genes.pattern.list <- do.call("list", mget(genes.pattern))
list_genes <- genes.pattern.list
names(list_genes) <- genes.pattern
list_genes2 <- list_genes[lengths(list_genes) >  0]
vam.out <- vamForSeurat(seurat.data = seurat.object,
gene.set.collection = list_genes2)
rownames(vam.out@assays$VAMcdf@data) <- gsub("-Genes", "",
rownames(vam.out@assays$VAMcdf@data))
return(vam.out)
}
}
CytoSig.score.output <- scapeForSeurat(seurat.object = pbmc_small,
database = "cytosig", cytokine = "all")
CytoSig.score.output <- scapeForSeurat(seurat.object = pbmc_small,
database = "cytosig", cytokine = "all")
cytosig_mat <- as.data.frame(t(as.matrix(CytoSig.score.output@assays$VAMcdf@data)))
CytoSig.score.output@assays$scape
cytosig_mat <- as.data.frame(t(as.matrix(CytoSig.score.output@assays$scape@data)))
pheatmap(cytosig_mat, fontsize_row = 4, fontsize_col = 7,
cluster_rows = FALSE, cluster_cols = FALSE)
CytoSig.score.output <- scapeForSeurat(seurat.object = pbmc_small,
database = "cytosig", cytokine = "all")
cytosig_mat <- as.data.frame(t(as.matrix(CytoSig.score.output@assays$scape@data)))
pheatmap(cytosig_mat, fontsize_row = 4, fontsize_col = 7,
cluster_rows = FALSE, cluster_cols = FALSE)
pheatmap(cytosig_mat, fontsize_row = 4, fontsize_col = 7)
setwd("~/Documents/SCAPE/scaper-package/scaper")
devtools::load_all()
rm(list = c("scapeForSeurat"))
devtools::load_all()
devtools::build_vignettes()
pbmc_small <- NormalizeData(pbmc_small)
counts.matrix2 <- as.data.frame(t(as.matrix(pbmc_small@assays$RNA@data)))
CytoSig.score.output <- scape(counts.matrix = counts.matrix2,
database = "cytosig")
counts.matrix2
scape(counts.matrix = counts.matrix2,
database = "cytosig")
CytoSig.score.output <- scape(counts.matrix = counts.matrix2,
database = "cytosig", cytokine="all")
library(Seurat)
library(SeuratObject)
pbmc_small <- NormalizeData(pbmc_small)
counts.matrix <- as.data.frame(t(as.matrix(pbmc_small@assays$RNA@data)))
CytoSig.score.output <- scape(counts.matrix = counts.matrix,
database = "cytosig")
counts.matrix = counts.matrix
database = "cytosig"
database == "cytosig"
cytokine = c("IL4", "IL13")
cytokine.list <- cytokine
total.output <- mat.cytosig.cytokine.weights[cytokine.list]
for (i in 1:length(total.output)) {
label.genes <- paste(unique(total.output[[i]]$cytokineLabel), "Genes", sep = "-")
out.data <- total.output[[i]]
positive.weighted.data <- out.data %>% dplyr::filter(weight > 0) %>% dplyr::arrange(desc(weight))
positive.weighted.genes <- positive.weighted.data[positive.weighted.data$gene %in% colnames(counts.matrix),]
positive.weighted.indices <- which(colnames(counts.matrix) %in% positive.weighted.genes$gene)
label.genes.positive <- paste(unique(total.output[[i]]$cytokineLabel), "GenesPositive", sep = "-")
assign(label.genes.positive, positive.weighted.indices)
label.weights.positive <- paste(unique(total.output[[i]]$cytokineLabel), "WeightsPositive", sep = "-")
assign(label.weights.positive, positive.weighted.genes$weight)
negative.weighted.data <- out.data %>% dplyr::filter(weight < 0) %>% dplyr::arrange(desc(weight))
negative.weighted.genes <- negative.weighted.data[negative.weighted.data$gene %in% colnames(counts.matrix),]
negative.weighted.indices <- which(colnames(counts.matrix) %in% negative.weighted.genes$gene)
label.genes.negative <- paste(unique(total.output[[i]]$cytokineLabel), "GenesNegative", sep = "-")
assign(label.genes.negative, negative.weighted.indices)
label.weights.negative <- paste(unique(total.output[[i]]$cytokineLabel), "WeightsNegative", sep = "-")
assign(label.weights.negative, abs(negative.weighted.genes$weight))
}
genes.pattern.positive <- paste(cytokine.list, "-GenesPositive", sep="")
list_genes_positive <- do.call("list", mget(genes.pattern.positive))
names(list_genes_positive) <- genes.pattern.positive
weights.pattern.positive <- paste(cytokine.list, "-WeightsPositive", sep="")
list_weights_positive <- do.call("list", mget(weights.pattern.positive))
names(list_weights_positive) <- weights.pattern.positive
vam.out.positive <- vamForCollection(gene.expr = counts.matrix,
gene.weights = list_weights_positive,
gene.set.collection = list_genes_positive)
genes.pattern.negative <- paste(cytokine.list, "-GenesNegative", sep="")
list_genes_negative <- do.call("list", mget(genes.pattern.negative))
names(list_genes_negative) <- genes.pattern.negative
weights.pattern.negative <- paste(cytokine.list, "-WeightsNegative", sep="")
list_weights_negative <- do.call("list", mget(weights.pattern.negative))
names(list_weights_negative) <- weights.pattern.negative
vam.out.negative <- vamForCollection(gene.expr = counts.matrix,
gene.weights = list_weights_negative,
gene.set.collection = list_genes_negative)
vam.out.positive$cdf.value <- (vam.out.positive$cdf.value + (1-vam.out.negative$cdf.value))/2
colnames(vam.out.positive$cdf.value) <- cytokine.list
scape <- function(counts.matrix, database="cytosig", cytokine="all") {
if (missing(counts.matrix)) {
stop("scRNA-seq counts matrix is missing.")
}
if (database == "cytosig") {
if (length(cytokine) == 1 && cytokine == "all") {
cytokine.list <- supportedCytokines(database = "cytosig")
} else {
cytokine.list <- cytokine
}
total.output <- mat.cytosig.cytokine.weights[cytokine.list]
for (i in 1:length(total.output)) {
label.genes <- paste(unique(total.output[[i]]$cytokineLabel), "Genes", sep = "-")
out.data <- total.output[[i]]
positive.weighted.data <- out.data %>% dplyr::filter(weight > 0) %>% dplyr::arrange(desc(weight))
positive.weighted.genes <- positive.weighted.data[positive.weighted.data$gene %in% colnames(counts.matrix),]
positive.weighted.indices <- which(colnames(counts.matrix) %in% positive.weighted.genes$gene)
label.genes.positive <- paste(unique(total.output[[i]]$cytokineLabel), "GenesPositive", sep = "-")
assign(label.genes.positive, positive.weighted.indices)
label.weights.positive <- paste(unique(total.output[[i]]$cytokineLabel), "WeightsPositive", sep = "-")
assign(label.weights.positive, positive.weighted.genes$weight)
negative.weighted.data <- out.data %>% dplyr::filter(weight < 0) %>% dplyr::arrange(desc(weight))
negative.weighted.genes <- negative.weighted.data[negative.weighted.data$gene %in% colnames(counts.matrix),]
negative.weighted.indices <- which(colnames(counts.matrix) %in% negative.weighted.genes$gene)
label.genes.negative <- paste(unique(total.output[[i]]$cytokineLabel), "GenesNegative", sep = "-")
assign(label.genes.negative, negative.weighted.indices)
label.weights.negative <- paste(unique(total.output[[i]]$cytokineLabel), "WeightsNegative", sep = "-")
assign(label.weights.negative, abs(negative.weighted.genes$weight))
}
genes.pattern.positive <- paste(cytokine.list, "-GenesPositive", sep="")
list_genes_positive <- do.call("list", mget(genes.pattern.positive))
names(list_genes_positive) <- genes.pattern.positive
weights.pattern.positive <- paste(cytokine.list, "-WeightsPositive", sep="")
list_weights_positive <- do.call("list", mget(weights.pattern.positive))
names(list_weights_positive) <- weights.pattern.positive
vam.out.positive <- vamForCollection(gene.expr = counts.matrix,
gene.weights = list_weights_positive,
gene.set.collection = list_genes_positive)
genes.pattern.negative <- paste(cytokine.list, "-GenesNegative", sep="")
list_genes_negative <- do.call("list", mget(genes.pattern.negative))
names(list_genes_negative) <- genes.pattern.negative
weights.pattern.negative <- paste(cytokine.list, "-WeightsNegative", sep="")
list_weights_negative <- do.call("list", mget(weights.pattern.negative))
names(list_weights_negative) <- weights.pattern.negative
vam.out.negative <- vamForCollection(gene.expr = counts.matrix,
gene.weights = list_weights_negative,
gene.set.collection = list_genes_negative)
vam.out.positive$cdf.value <- (vam.out.positive$cdf.value + (1-vam.out.negative$cdf.value))/2
colnames(vam.out.positive$cdf.value) <- cytokine.list
return(vam.out.positive$cdf.value)
}
else {
if (cytokine == "all") {
cytokine.list <- supportedCytokines(database = "reactome")
} else {
cytokine.list <- cytokine
}
total.output <- mat.reactome.cytokine
for (i in 1:length(total.output)) {
label.genes <- paste(unique(total.output[[i]]$cytokineLabel), "Genes", sep = "-")
out.data <- total.output[[i]]
out.data.genes <- out.data[out.data$gene %in% colnames(counts.matrix),]
out.data.indices <- which(colnames(counts.matrix) %in% out.data.genes$gene)
label.genes <- paste(unique(total.output[[i]]$cytokineLabel), "Genes", sep = "-")
assign(label.genes, out.data.indices)
}
genes.pattern <- paste(cytokine.list, "-Genes", sep="")
genes.pattern.list <- do.call("list", mget(genes.pattern))
list_genes <- genes.pattern.list
names(list_genes) <- genes.pattern
list_genes2 <- list_genes[lengths(list_genes) >  0]
vam.out <- vamForCollection(gene.expr = counts.matrix,
gene.set.collection = list_genes2)
colnames(vam.out$cdf.value) <- gsub("-Genes", "",
colnames(vam.out$cdf.value))
return(vam.out$cdf.value)
}
}
library(Seurat)
library(SeuratObject)
pbmc_small <- NormalizeData(pbmc_small)
counts.matrix <- as.data.frame(t(as.matrix(pbmc_small@assays$RNA@data)))
CytoSig.score.output <- scape(counts.matrix = counts.matrix,
database = "cytosig")
setwd("~/Documents/SCAPE/scaper-package/scaper")
devtools::load_all()
rm(list = c("scape"))
devtools::load_all()
devtools::build_vignettes()
pbmc_small <- NormalizeData(pbmc_small)
counts.matrix <- as.data.frame(t(as.matrix(pbmc_small@assays$RNA@data)))
CytoSig.score.output <- scape(counts.matrix = counts.matrix,
database = "cytosig")
library(SeuratObject)
pbmc_small <- NormalizeData(pbmc_small)
counts.matrix <- as.data.frame(t(as.matrix(pbmc_small@assays$RNA@data)))
counts.matrix = counts.matrix
database = "cytosig"
cytokine="all"
#Full matrix of cytokines
#TWEAK renamed to TNFSF12
#Only IFN1 and IL36 are excluded.
uniq.ligand <- c("IL13", "IL4", "NO", "TGFB3", "GDF11", "TGFB1", "MCSF", "GCSF", "IL10", "WNT3A", "ActivinA", "BMP4",
"BMP2", "BMP6", "IL22", "IFNG", "IL27", "IFNL", "LIF", "IL6", "OSM", "IL12", "IL21",
"LTA", "IL3", "IL2", "GMCSF", "IL15", "TRAIL", "TNFSF12", "IL1A", "CD40LG", "IL1B",
"TNFA", "IL17A", "HGF", "BDNF", "EGF", "VEGFA", "CXCL12", "FGF2")
empty_list <- vector(mode = "list", length = 41)
for (k in 1:length(uniq.ligand)) {
pathRead <- paste(uniq.ligand[k], "-output.csv", sep="")
pathOut <- read.csv(pathRead)
pathOut3 <- pathOut %>%
dplyr::group_by(Gene) %>%
dplyr::summarise(meanVal = mean(Value.adj))
dat_tot <- as.data.frame(cbind(pathOut3, uniq.ligand[k]))
names(dat_tot) <- c("gene", "weight", "cytokineLabel")
empty_list[[k]] <- dat_tot
names(empty_list)[[k]] <- uniq.ligand[k]
print(k)
}
setwd("~/Documents/SCAPE/CytoSig-Reactome-DataResults")
empty_list <- vector(mode = "list", length = 41)
for (k in 1:length(uniq.ligand)) {
pathRead <- paste(uniq.ligand[k], "-output.csv", sep="")
pathOut <- read.csv(pathRead)
pathOut3 <- pathOut %>%
dplyr::group_by(Gene) %>%
dplyr::summarise(meanVal = mean(Value.adj))
dat_tot <- as.data.frame(cbind(pathOut3, uniq.ligand[k]))
names(dat_tot) <- c("gene", "weight", "cytokineLabel")
empty_list[[k]] <- dat_tot
names(empty_list)[[k]] <- uniq.ligand[k]
print(k)
}
mat.cytosig.cytokine.weights <- empty_list
setwd("~/Documents/SCAPE/scaper-package/scaper")
load("~/Documents/SCAPE/scaper-package/scaper/R/sysdata.rda")
head(load("~/Documents/SCAPE/scaper-package/scaper/R/sysdata.rda"))
mat.cytosig.cytokine.weights <- empty_list
View(mat.cytosig.cytokine.weights)
save(ramilowski.database, mat.reactome.cytokine, mat.cytosig.cytokine.weights, file = "sysdata.rda")
setwd("~/Documents/SCAPE/scaper-package/scaper/R")
save(ramilowski.database, mat.reactome.cytokine, mat.cytosig.cytokine.weights, file = "sysdata.rda")
load("~/Documents/SCAPE/scaper-package/scaper/R/sysdata.rda")
head(load("~/Documents/SCAPE/scaper-package/scaper/R/sysdata.rda"))
View(mat.cytosig.cytokine.weights)
View(mat.reactome.cytokine)
View(mat.reactome.cytokine)
View(ramilowski.database)
devtools::load_all()
devtools::build_vignettes()
CytoSig.score.output <- scapeForSeurat(seurat.object = pbmc_small,
database = "cytosig", cytokine = "all")
cytosig_mat <- as.data.frame(t(as.matrix(CytoSig.score.output@assays$scape@data)))
pheatmap(cytosig_mat, fontsize_row = 4, fontsize_col = 7,
cluster_rows = FALSE, cluster_cols = FALSE)
pbmc_small <- NormalizeData(pbmc_small)
counts.matrix2 <- as.data.frame(t(as.matrix(pbmc_small@assays$RNA@data)))
CytoSig.score.output <- scape(counts.matrix = counts.matrix2,
database = "cytosig", cytokine = "all")
pheatmap(CytoSig.score.output, fontsize_row = 4, fontsize_col = 7,
cluster_rows = FALSE, cluster_cols = FALSE)
